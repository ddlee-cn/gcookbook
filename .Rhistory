Top5$Month = months(DateConvert)
Top5$Weekday = weekdays(DateConvert)
Top5$Date = DateConvert
table(Top5$Weekday,subset(Top5,Top5$LocationDescription=="GAS STATION"))
table(Top5$Weekday,Top5$LocationDescription=="GAS STATION")
table(Top5$Weekday,Top5$LocationDescription=="DRIVEWOAYS(RESIDENTIAL)")
table(Top5$Weekday,Top5$LocationDescription=="DRIVEWOAYS - RESIDENTIAL")
table(Top5$Weekday,Top5$LocationDescription=="DRIVEWAYS - RESIDENTIAL")
table(Top5$Weekday,Top5$LocationDescription=="DRIVEWAY - RESIDENTIAL")
table(Top5$Weekday,Top5$LocationDescription=="GAS STATION")
table(Top5$Weekday,Top5$LocationDescription)
table(Top5$LocationDescription, Top5$Weekday).
table(Top5$LocationDescription, Top5$Weekday)
q()
library(swirl)
swirl()
rug(ppm)
rug(high)
low
high
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abine(v=12,lwd=2)
abline(v=12,lwd=2)
abline(v=median(ppm),lwd=4,col="magenta")
names(pollution)
table(pollution$region)
reg<-table(pollution$region)
reg
barplot(reg,col="wheat,main="Number of Counties in Each Region"")
barplot(reg,col="wheat,main="Number of Counties in Each Region")
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pm25~region,col="red")
boxplot(ppm$pm25~ppm$region,col="red")
boxplot(pollution$pm25~pollution$region,col="red")
boxplot(pm25~region,data=pollution,col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east<-subset(pollution,region==east)
east<-subset(pollution,region=="east")
head(east)
hist(east$pm25,col="green")
ls
ls()
hist(subset(pollution,region=="west")$pm25,col="green")
plot(pollution,latitude,pm25)
plot(data=pollution,latitude,pm25)
with(pollution)
with(pollution,plot(latitude,pm25))
abline(b=12,lty=2,lwd=2)
abline(h=12,lty=2,lwd=2)
plot(pollution$latitude,pollution$pm25,col=pollution$region)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow=c(1,2),mar=c(5,4,2,1))
west<-subset(pollution,region="west")
west<-subset(pollution,region=="west")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="East")
?Devices
with(dataset,plot)
with(faithful,plot)
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dec.cur
dec.cur()
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dec.cur()
dev.cur()
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.off()
head(cars)
with(cars,plot(speed,dist))
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income|region, state, layout=c(4,1))
xyplot(Life.Exp ~ Income|region, state, layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data=mpg)
head(airquality)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,data=airquality)
boxplot(Ozone~Month,data=airquality,xlab="Month",ylab="Ozone(ppb)",col.axis="blue")
boxplot(Ozone~Month,data=airquality,xlab="Month",ylab="Ozone(ppb)",col.axis="blue",col.lab="Red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone(ppb)",col.axis="blue",col.lab="Red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone(ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
text(main="Ozone and Wind in New York City")
titile(main="Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
par()
length(par(0))
length(par())
names(par())
par()$pin
par('fg')
par('pch')
par("lty")
plot(airquality$Wind, airquality$Ozone, set="n")
plot(airquality$Wind, type="n",airquality$Ozone)
title("Wind and Ozone in NYC")
may <- subset(airquality$Month==5)
may <- subset(airquality,airquality$Month==5)
may <- subset(airquality,Month==5)
points(may$wind,may$ozone,col="blue",pch="24")
points(may$wind,may$ozone,col="blue",pch=17)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay<-subset(airquality,Month!=5)
points(notmay$Wind,notmay$Ozone,col="red")
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R, main= "Ozone and Solar Radiation")
par(mfrow=(3,1),mar=c(4,4,2,1),oma=c(0,0,2,0))
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main= "Ozone and Solar Radiantion")
plot(airquality$Solar.R, airquality$Ozone, main= "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
title("Ozone and Weather in New York City", outer = TRUE)
mtext("Ozone and Weather in New York City", outer = TRUE)
q()
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality, col="red", pch=8)
xyplot(Ozone~Wind, airquality, col="red", pch=8, main = "Big Apple Data")
xyplot(Ozone~Wind, airquality, pch=8, col="red", main = "Big Apple Data")
xyplot(Ozone~Wind|as.factor(Month), airquality, layout=c(5,1))
xyplot(Ozone~Wind|Month, airquality, layout=c(5,1))
p<-xyplot(Ozone~Wind,ariquality)
p<-xyplot(Ozone~Wind,airquality)
p
names(p)
class(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit(plot1.R)
myedit("plot1.R")
source(pathtofile("plot1.R"), local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), loacl=T)
source(pathtofile("myLabels.R"), local=T)
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat|color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(price~carat|color*cut, data=diamonds, strip=TRUE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
sample(colors(),10)
pal<-colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
sNy0EOfr8kVfkphI
p1<-colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0XCC
p2<-colorRampPalette(c("red","yellot"))
p2<-colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3<-colorRampPalette(c("blue","green"), alpha=.5)
p3(5)
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5,.4))
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
cols<-brewer.pal(3,"BuGn")
showMe(cols)
pal<-colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano,col=pal(20))
image(volcano,col=p1(20)
)
str(mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,dat=mpg)
qplot(displ,hwy,data =mpg)
qplot(displ,hwy,data =mpg, col=drv)
qplot(displ,hwy,data =mpg, color colors=drv)
qplot(displ,hwy,data =mpg, color=drv)
qplot(displ,hwy,data =mpg, color=drv, geom=c("point","smooth"))
qplot(y=hwy,data=mpg,color=drv)
myhigh
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy,dat=mpg,aesthetic=drv)
qplot(hwy,data =mpg,aesthetic=drv)
qplot(hwy,data =mpg,fill=drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
q()
library(swirl)
swirl()
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=./drv)
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv)
g,-ggplot(mpg,aes)
g<-ggplot(mpg,aes)
g<-ggplot(mpg,aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_poinrt()+geom_smooth()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(lm)
g+geom_point()+geom_smooth("lm")
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("ggplot rules")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=1/2)
g+geom_point(aes(color=drv), size=4, alpha=1/2)
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv), size=2, alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
a+geom_point(color=drv)+theme_bw(base_family = "Times")
g+geom_point(color=drv)+theme_bw(base_family = "Times")
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx,myy,type="l",ylim=c(-3,3))
g<-ggplot(testdat,aes(myx,myy))
g+geom_line()
g+geom_line(ylim(-3,3))
g+geom_line(aes(ylim(-3,3)))
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim(-3,3))
g+geom_line()+coord_cartesian(ylim=c(-3,3)
)
g<-ggplot(mpg,aes(displ,hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway mileage", title="Swirl Rules!")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage", title="Swirl Rules!")
str(diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
brk
conuts
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut())
qplot(price,data=diamonds,binwidth=18497/30,fill=cut
)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut,geom_smooth(method="lm"))
qplot(carat,price,data=diamonds,color=cut,geom_smooth(method="lm"))
qplot(carat,price,data=diamonds,color=cut,geom_smooth)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut)+geom_smooth(method="lm")
qplot(carat,price,data=diamonds,color=cut,facets=.~cut)+geom_smooth(method="lm")
g<-ggplot(diamonds, aes(depth,price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints<-quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat, cutpoints)
g<-ggplot(diamonds, aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(damonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
q()
q()
q()
install.packages("gcookbook")
library(plyr)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(gcookbook)
library(dplyr)
sunspotyear <- data.frame(
Year = as.numeric(time(sunspot.year)),
sunspots = as.numeric(sunspot.year)
)
ggplot(sunspotyear, aes(x=Year, y=Sunspots)) + geom_area()
sunspotyear <- data.frame(
Year = as.numeric(time(sunspot.year)),
Sunspots = as.numeric(sunspot.year)
)
ggplot(sunspotyear, aes(x=Year, y=Sunspots)) + geom_area()
sunspotyear <- data.frame(
Year = as.numeric(time(sunspot.year)),
Sunspots = as.numeric(sunspot.year)
)
ggplot(sunspotyear, aes(x=Year, y=Sunspots)) +
geom_area(colour="black", fill="blue", alpha=.2)
sunspotyear <- data.frame(
Year = as.numeric(time(sunspot.year)),
Sunspots = as.numeric(sunspot.year)
)
ggplot(sunspotyear, aes(x=Year, y=Sunspots)) +
geom_area(fill="blue", alpha=.2) +
geom_line()
ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup)) + geom_area()
q()
mydata<-read.delim("clipboard")
mydata<-read.delim("clipboard")
attach(mydata)
basicStats(height)
normalTest(height)
qqnorm(totlngth,main="Normality Check via QQ Plot")
qqline(totlngth,col='red')
hist(height)
height<-read.table("clipboard")
height<-read.delim("clipboard")
height<-read.delim("clipboard")
height<-read.delim("clipboard")
basicStats(height)
normalTest(height)
qqnorm(totlngth,main="Normality Check")
qqline(totlngth,col='red')
hist(height)
str(height)
height<-read.delim("clipboard")
height<-read.delim("clipboard")
height<-read.delim("clipboard")
height<-read.delim("clipboard", sep="\n")
height<-read.delim("clipboard", sep="\n\r")
qqnorm(height)
height<-read.csv("height.csv", sep="\n")
basicStats(height$height)
normalTest(height$height)
qqnorm(height$height,main="Normality Check")
qqline(height$height,col='red')
hist(height$height)
install.packages("fBasics")
library(fBasics)
height<-read.csv("height.csv", sep="\n")
basicStats(height$height)
normalTest(height$height)
library(fBasics)
delta<-read.csv("delta.csv", sep="\n")
t.test(delta$delta,conf.level = 0.95)
conf.int<-function(x,n,alpha)
{
options(digits=4)
c(var(x)/qchisq(1-alpha/2,df=n-1,lower.tail=TRUE),var(x)/qchisq(alpha/2,df=n-1,lower.tail=TRUE))
}
conf.int(delta$delta,9,0.05)
test<-read.csv("Test.csv")
library(fBasics)
t.test(test$before1,test$before2,var.equal=FALSE,conf.level=0.95)
t.test(t4\est$before1,test$after1,var.equal=FALSE,conf.level=0.95)
t.test(test$before2,test$after2,var.equal=FALSE,conf.level=0.95)
effect1<-test$before1-test$after1
effect2<-test$before2-test$after2
t.test(effect1,effect2,var.equal=FALSE,conf.level=0.95)
test<-read.csv("Test.csv")
library(fBasics)
t.test(test$before1,test$before2,var.equal=FALSE,conf.level=0.95)
t.test(test$before1,test$after1,var.equal=FALSE,conf.level=0.95)
t.test(test$before2,test$after2,var.equal=FALSE,conf.level=0.95)
effect1<-test$before1-test$after1
effect2<-test$before2-test$after2
t.test(effect1,effect2,var.equal=FALSE,conf.level=0.95)
test<-read.csv("Test.csv")
str(test)
test<-read.csv("height.csv")
str(test)
test<-read.csv("height.csv", sep="\t")
str(test)
test<-read.csv("height.csv", sep="\t")
str(test)
test<-read.csv("height.csv", sep="\t")
test<-read.csv("height.csv", sep="\t")
test<-read.csv("height.csv", sep="\t")
test<-read.csv("height.csv")
str(test)
test<-read.csv("height.csv")
library(fBasics)
t.test(test$before1,test$before2,var.equal=FALSE,conf.level=0.95)
t.test(test$before1,test$after1,var.equal=FALSE,conf.level=0.95)
t.test(test$before2,test$after2,var.equal=FALSE,conf.level=0.95)
effect1<-test$before1-test$after1
effect2<-test$before2-test$after2
t.test(effect1,effect2,var.equal=FALSE,conf.level=0.95)
a<-c(24，27，26，21，24)
b<-c(27，28，23，31，26)
library(fBasics)
a<-c(24,27,26,21,24)
b<-c(27,28,23,31,26)
sd(a)
sd(b)
sqrt(5)
library(fBasics)
a<-c(24,27,26,21,24)
b<-c(27,28,23,31,26)
dualTest<-function(x,y,sigma1,sigma2,n1,n2,level)
{
options(digits=4)
mean1<-mean(x)
mean2<-mean(y)
c(mean1-mean2-sqrt(sigma1^2/n1+sigma2^2/n2)*qnorm(1-level/2,mean=0,sd=1,lower.tail=TRUE),
mean1-mean2+sqrt(sigma1^2/n1+sigma2^2/n2)*qnorm(1-level/2,mean=0,sd=1,lower.tail=TRUE))
}
dualTest(a,b,sqrt(5),sqrt(8),5,5,0.05)
var.test(a,b)
q()
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(position="dodge") +
geom_errorbar(aes(ymin=Weight-se, ymax=Weight+se),
position=position_dodge(0.9), width=.2)
pd <- position_dodge(0.3)
ggplot(cabbage_exp, aes(x=Date, y=Weight, colour=Cultivar)) +
geom_errorbar(aes(ymin=Weight-se, ymax=Weight+se),
width=.2, size=0.25, colour="black", position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=2.5)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(gcookbook)
library(plyr)
library(reshape2)
library(MASS)
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(position="dodge") +
geom_errorbar(aes(ymin=Weight-se, ymax=Weight+se),
position=position_dodge(0.9), width=.2)
pd <- position_dodge(0.3)
ggplot(cabbage_exp, aes(x=Date, y=Weight, colour=Cultivar)) +
geom_errorbar(aes(ymin=Weight-se, ymax=Weight+se),
width=.2, size=0.25, colour="black", position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=2.5)
pd <- position_dodge(0.3)
ggplot(cabbage_exp, aes(x=Date, y=Weight, colour=Cultivar)) +
geom_errorbar(aes(ymin=Weight-se, ymax=Weight+se),
width=.2, size=0.25, colour="black", position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=2.5)
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(position="dodge") +
geom_errorbar(aes(ymin=Weight-se, ymax=Weight+se),
position=position_dodge(0.9), width=.2)
pd <- position_dodge(0.3)
ggplot(cabbage_exp, aes(x=Date, y=Weight, colour=Cultivar, group=Cultivar)) +
geom_errorbar(aes(ymin=Weight-se, ymax=Weight+se),
width=.2, size=0.25, colour="black", position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=2.5)
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(position="dodge") +
geom_errorbar(aes(ymin=Weight-se, ymax=Weight+se),
position=position_dodge(0.9), width=.2)
pd <- position_dodge(0.3)
ggplot(cabbage_exp, aes(x=Date, y=Weight, colour=Cultivar, group=Cultivar)) +
geom_errorbar(aes(ymin=Weight-se, ymax=Weight+se),
width=.2, size=0.25, colour="black", position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=2.5)
q()
install.packages("animation")
install.packages("Rd2roxygen")
library(Rd2roxygen)
rad('animation', install=TRUE)
ra('animation', install=TRUE)
rab('animation', install=TRUE)
getwd(0)
getwd()
rab('animation', install=TRUE)
library(animation)
rab('animation', install=TRUE)
q()
setwd("~/GitProj/RProjects/Rcookbook/")
ls
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(gcookbook)
library(plyr)
library(reshape2)
library(MASS)
pd <- position_dodge(0.3)
ggplot(cabbage_exp, aes(x=Date, y=Weight, colour=Cultivar, group=Cultivar)) +
geom_errorbar(aes(ymin=Weight-se, ymax=Weight+se),
width=.2, size=0.25, colour="black", position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=2.5)
